apiVersion: traefik.io/v1alpha1
kind: Middleware
metadata:
  name: redirect-path-for-internal
spec:
  replacePathRegex:
    regex: /.*
    replacement: /set-route.html
---
apiVersion: traefik.io/v1alpha1
kind: Middleware
metadata:
  name: redirect-path-for-external
spec:
  replacePathRegex:
    regex: /.*
    replacement: /
---
apiVersion: traefik.io/v1alpha1
kind: IngressRoute
metadata:
  name: static-file-server-http-for-internal
spec:
  entryPoints:
    - web
  routes:
    - match: ((ClientIP(`192.168.219.0/24`) || ClientIP(`192.168.128.0/24`)) && Host(`{{ .Values.secrets.hostname }}`)) && (!HeaderRegexp(`Cookie`, `app_route`) || PathPrefix(`/set-route.html`))
      kind: Rule
      middlewares:
        - name: redirect-path-for-internal
          namespace: {{ .Release.Namespace }}
      services:
        - name: static-file-server
          port: 80
---
apiVersion: traefik.io/v1alpha1
kind: IngressRoute
metadata:
  name: static-file-server-https-for-internal
spec:
  entryPoints:
    - websecure
  routes:
    - match: ((ClientIP(`192.168.219.0/24`) || ClientIP(`192.168.128.0/24`)) && Host(`{{ .Values.secrets.hostname }}`)) && (!HeaderRegexp(`Cookie`, `app_route`) || PathPrefix(`/set-route.html`))
      middlewares:
        - name: redirect-path-for-internal
          namespace: {{ .Release.Namespace }}
      kind: Rule
      services:
        - name: static-file-server
          port: 80
  tls:
    secretName: generic-certificate
---
apiVersion: traefik.io/v1alpha1
kind: IngressRoute
metadata:
  name: static-file-server-http-for-external
spec:
  entryPoints:
    - web
  routes:
    - match: (!ClientIP(`192.168.219.0/24`) && !ClientIP(`192.168.128.0/24`)) && Host(`{{ .Values.secrets.hostname }}`)
      kind: Rule
      middlewares:
        - name: redirect-path-for-external
          namespace: {{ .Release.Namespace }}
      services:
        - name: static-file-server
          port: 80
---
apiVersion: traefik.io/v1alpha1
kind: IngressRoute
metadata:
  name: static-file-server-https-for-external
spec:
  entryPoints:
    - websecure
  routes:
    - match: (!ClientIP(`192.168.219.0/24`) && !ClientIP(`192.168.128.0/24`)) && Host(`{{ .Values.secrets.hostname }}`)
      kind: Rule
      middlewares:
        - name: redirect-path-for-external
          namespace: {{ .Release.Namespace }}
      services:
        - name: static-file-server
          port: 80
