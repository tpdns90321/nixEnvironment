apiVersion: traefik.io/v1alpha1
kind: Middleware
metadata:
  name: adguard-stripprefix
spec:
  stripPrefix:
    prefixes:
      - /adguard
---
apiVersion: traefik.io/v1alpha1
kind: IngressRoute
metadata:
  name: adguard-http
spec:
  entryPoints:
    - web
  routes:
    - match: (ClientIP(`192.168.219.0/24`) || ClientIP(`192.168.128.0/24`)) && PathPrefix(`/adguard`) && HostRegexp(`.*`) && HeaderRegexp(`Cookie`, `.*`)
      kind: Rule
      middlewares:
        - name: adguard-stripprefix
          namespace: {{ .Release.Namespace }}
      services:
        - name: adguardhome
          namespace: {{ .Release.Namespace }}
          port: 80
---
apiVersion: traefik.io/v1alpha1
kind: IngressRoute
metadata:
  name: adguard-https
spec:
  entryPoints:
    - websecure
  routes:
    - match: (ClientIP(`192.168.219.0/24`) || ClientIP(`192.168.128.0/24`)) && PathPrefix(`/adguard`) && HostRegexp(`.*`) && HeaderRegexp(`Cookie`, `.*`)
      kind: Rule
      middlewares:
        - name: adguard-stripprefix
          namespace: {{ .Release.Namespace }}
      services:
        - name: adguardhome
          namespace: {{ .Release.Namespace }}
          port: 80
  tls:
    secretName: generic-certificate
# TCP/UDP ingress now handled by external NodePort service
# See service-external.yaml for DNS port exposure
