# Do not modify this file!  It was generated by ‘nixos-generate-config’
# and may be overwritten by future invocations.  Please make changes
# to /etc/nixos/configuration.nix instead.
{ config, lib, pkgs, modulesPath, ... }:

{
  imports = [
    <nixpkgs/nixos/modules/profiles/all-hardware.nix>
  ];

  boot.loader.grub = {
    enable = true;
    device = "nodev";
    efiSupport = true;
    efiInstallAsRemovable = true;
    enableCryptodisk = true;
  };
  boot.loader.efi.efiSysMountPoint = "/boot/efi";
  boot.initrd.secrets = {
    "/boot/root.key" = "/boot/root.key";
  };
  boot.initrd.luks.devices = {
    root = {
      device = "/dev/disk/by-uuid/7f75d6ef-dee8-4df8-aef8-17b7c1d7e251";
      preLVM = true;
      keyFile = "/boot/root.key";
    };
  };
  boot.extraModprobeConfig = "options usb-storage quirks=04e8:61f5:u\n";
  boot.extraModulePackages = with config.boot.kernelPackages; [ rtl8821cu ];
  boot.initrd.kernelModules = [ "8821cu" ];

  fileSystems."/" =
    { device = "/dev/disk/by-uuid/97aa8cc6-8b97-4d6e-ba80-ca2f975fb744";
      fsType = "xfs";
    };

  fileSystems."/boot/efi" =
    { device = "/dev/disk/by-uuid/40F9-E98C";
      fsType = "vfat";
    };

  swapDevices = [ ];

  # Enables DHCP on each ethernet and wireless interface. In case of scripted networking
  # (the default) this is the recommended approach. When using systemd-networkd it's
  # still possible to use this option, but it's recommended to use it in conjunction
  # with explicit per-interface declarations with `networking.interfaces.<interface>.useDHCP`.
  networking.useDHCP = lib.mkDefault true;
  # networking.interfaces.eth0.useDHCP = lib.mkDefault true;

  nixpkgs.hostPlatform = lib.mkDefault "x86_64-linux";
  virtualisation.hypervGuest.enable = true;
}
